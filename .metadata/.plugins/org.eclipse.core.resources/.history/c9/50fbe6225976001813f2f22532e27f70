package fr.fortress.quizmanager.services;

import java.util.List;

import javax.inject.Inject;

import org.springframework.stereotype.Component;

import fr.fortress.quizmanager.daos.ExamDAO;
import fr.fortress.quizmanager.model.Exam;

@Component
public class ExamService {
	
	@Inject
	ExamDAO examDAO;

	public boolean isUserAuthenticated(String examTitleName, int examId) {

		Exam exam = new Exam();
		exam.setExamTitleName(examTitleName);
		exam.setExamId(examId);

		List<Exam> examList = examDAO.searchRecord(exam);

		int count = examList.size();
		boolean result = false;

		for (int i = 0; i < count; i++) {

			if (exam.getExamTitleName().equals(examList.get(i).getExamTitleName())
					&& exam.getExamId() == examList.get(i).getExamId())	{
				result = true;
			} else {
				result = false;
			}
		}
		return result;

	}

	public boolean createExam(Exam applicationUser) {

		if (applicationUser.getExamName().equals(null) || applicationUser.getUserName().equals("")
				|| applicationUser.getUserPassword().equals("")) {

			return false;
		} else {
			examDAO.createExam(applicationUser);
			return true;
		}

	}

	public boolean updateApplicationUser(Exam applicationUser) {

		if (applicationUser.getUserFullName().equals(null)
				|| applicationUser.getUserPassword().equals("")) {

			return false;
		} else {
			examDAO.updateExam(applicationUser);
			return true;
		}

	}

	public List<Exam> getAllUser(Exam applicationUser) {

		List<Exam> examList = examDAO.getListOfAllExams(applicationUser);
		return examList;
	}


}
