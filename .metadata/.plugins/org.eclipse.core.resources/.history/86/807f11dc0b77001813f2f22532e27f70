
package fr.fortress.quizmanager.services;

import java.util.List;

import javax.inject.Inject;

import org.hibernate.SessionFactory;
import org.hibernate.Transaction;
import org.springframework.stereotype.Component;

import fr.fortress.quizmanager.daos.MCQChoiceDAO;
import fr.fortress.quizmanager.daos.QuestionDAO;
import fr.fortress.quizmanager.model.Exam;
import fr.fortress.quizmanager.model.MCQChoice;
import fr.fortress.quizmanager.model.Question;

@Component
public class QuestionService {

	@Inject
	private MCQChoiceDAO mcqChoiceDAO;

	@Inject
	private QuestionDAO questiondao;

	@Inject
	private SessionFactory factory;

	
	public boolean createExam(Exam exam) {

		if (exam.getExamTitleName().equals(null) || exam.getExamTitleName().equals("")) {

			return false;
		} else {
			examDAO.createExam(exam);
			return true;
		}

	}

	public boolean updateExam(Exam exam) {

		if (exam.getExamTitleName().equals("")) {

			return false;
		} else {
			examDAO.updateExam(exam);
			return true;
		}

	}

	public List<Exam> getAllExams(Exam exam) {

		List<Exam> examList = examDAO.getListOfAllExams(exam);
		return examList;
	}
	
	// @Transactional
	// TODO check that in a further lecture
	public void deleteQuestion(Question question) {
		
		final Transaction transaction = factory.openSession().beginTransaction();
		
		final MCQChoice criteria = new MCQChoice();
		criteria.setQuestion(question);
		
		final List<MCQChoice> choicesList = mcqChoiceDAO.searchRecord(criteria);
		for (final MCQChoice choice : choicesList) {
			mcqChoiceDAO.deleteRecord(choice);
		}
		questiondao.deleteRecord(question);
		transaction.commit();
	}

}
